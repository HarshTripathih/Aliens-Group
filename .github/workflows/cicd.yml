# name: Deploy Next.js application

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps: 
#       - name: Checkout Source
#         uses: actions/checkout@v4

#       - name: Create .env file
#         run: echo "SITE_URL=${{ secrets.SITE_URL }}" >> .env

#       - name: Build Docker image
#         run: docker build -t harshtripathih/alienswebsite .

#       - name: Login to Docker Hub
#         run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

#       - name: Push Docker image to Docker Hub
#         run: docker push harshtripathih/alienswebsite:latest

#   deploy:
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - name: Set up SSH key
#         run: |
#           echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
#           chmod 400 key.pem

#       - name: Deploy on EC2 via SSH
#         run: |
#           ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
#             docker pull harshtripathih/alienswebsite:latest
#             docker rm -f aliens-webapp-container || true
#             docker run -d -p 3000:3000 --name aliens-webapp-container harshtripathih/alienswebsite:latest
#           EOF







name: Deploy to EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image to Amazon ECR
        id: build-and-push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            335160831887.dkr.ecr.ap-south-1.amazonaws.com/aliensgroup/website:${{ github.sha }}
            335160831887.dkr.ecr.ap-south-1.amazonaws.com/aliensgroup/website:latest

      - name: Update Docker image on EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # docker stop backend || true  
            # docker container prune -f
            # docker image prune -a -f
            aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 335160831887.dkr.ecr.ap-south-1.amazonaws.com
            docker pull 335160831887.dkr.ecr.ap-south-1.amazonaws.com/aliensgroup/website:${{ github.sha }}
            # docker run -d --name backend --hostname backend --network aliens 335160831887.dkr.ecr.ap-south-1.amazonaws.com/aliensgroup/website:${{ github.sha }}
            # docker run -d --name backend --hostname backend --network aliens --restart always 335160831887.dkr.ecr.ap-south-1.amazonaws.com/aliensgroup/website:${{ github.sha }}
